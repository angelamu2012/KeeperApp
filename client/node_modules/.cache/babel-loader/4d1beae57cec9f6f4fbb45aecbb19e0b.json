{"ast":null,"code":"var _jsxFileName = \"/Users/angela/Documents/KeeperApp/client/src/components/App.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Note from \"./Note\";\nimport NewCard from \"./NewCard\";\nimport notes from \"../notes\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nfunction App() {\n  const [data, setData] = React.useState([{}]);\n  const [dataUpdated, setDataUpdated] = useState(true);\n  function saveData(title, content) {\n    // setData([...data, { title: title, content: content }]);\n    setDataUpdated(!dataUpdated);\n    console.log(data);\n  }\n  function removeFromList(id) {\n    // setData((data) => {\n    //   return data.filter((item, index) => {\n    //     return index !== id;\n    //   });\n    // });\n    async function deleteData() {\n      console.log(\"db: \", title, content);\n      const response = await fetch(\"http://localhost:3000/api/postData\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        // converting userinput into json \n        body: JSON.stringify({\n          title: title,\n          content: content\n        })\n      });\n      if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n        setTitle(\"\");\n        setContent(\"\");\n        props.onAdd(title, content);\n      }\n    }\n    ;\n    deleteData();\n    setDataUpdated(!dataUpdated);\n    console.log(data);\n  }\n\n  // fetching data from backend \n  useEffect(() => {\n    fetch(\"/api\").then(response => response.json()).then(data => {\n      setData(data);\n      console.log(data);\n    });\n  }, [dataUpdated]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewCard, {\n    onAdd: saveData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"dl\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, data.map((item, index) => /*#__PURE__*/React.createElement(Note, {\n    key: index,\n    id: item.id,\n    title: item.title,\n    content: item.content,\n    onDelete: removeFromList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","Note","NewCard","notes","Header","Footer","App","data","setData","dataUpdated","setDataUpdated","saveData","title","content","console","log","removeFromList","id","deleteData","response","fetch","method","headers","body","JSON","stringify","status","setTitle","setContent","props","onAdd","then","json","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","key","onDelete"],"sources":["/Users/angela/Documents/KeeperApp/client/src/components/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Note from \"./Note\";\r\nimport NewCard from \"./NewCard\";\r\nimport notes from \"../notes\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction App() {\r\n  const [data, setData] = React.useState([{}]);\r\n  const [dataUpdated, setDataUpdated] = useState(true);\r\n\r\n  function saveData(title, content) {\r\n    // setData([...data, { title: title, content: content }]);\r\n    setDataUpdated(!dataUpdated);\r\n    console.log(data);\r\n  }\r\n\r\n  function removeFromList(id) {\r\n    // setData((data) => {\r\n    //   return data.filter((item, index) => {\r\n    //     return index !== id;\r\n    //   });\r\n    // });\r\n    async function deleteData () {\r\n      console.log(\"db: \", title, content)\r\n      const response = await fetch(\"http://localhost:3000/api/postData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n\r\n        // converting userinput into json \r\n        body: JSON.stringify({\r\n          title: title,\r\n          content: content\r\n        })\r\n      })\r\n      if(response?.status === 200) {\r\n        setTitle(\"\");\r\n        setContent(\"\");\r\n        props.onAdd(title, content);\r\n      }\r\n    };\r\n    deleteData();\r\n    setDataUpdated(!dataUpdated);\r\n    console.log(data);\r\n  }\r\n\r\n  // fetching data from backend \r\n  useEffect(()=>{\r\n    fetch(\"/api\").then(\r\n      response => response.json() \r\n    ).then(\r\n      data =>{\r\n        setData(data);\r\n        console.log(data);\r\n      }\r\n    )\r\n  },[dataUpdated])\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <NewCard onAdd={saveData} />\r\n\r\n      <dl>\r\n        {data.map((item, index) => (\r\n          <Note\r\n            key={index}\r\n            id={item.id}\r\n            title={item.title}\r\n            content={item.content}\r\n            onDelete={removeFromList}\r\n          />\r\n        ))}\r\n      </dl>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}